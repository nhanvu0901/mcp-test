version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: ai-assistant-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: ai_assistant
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - ai-assistant-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:v1.11.5
    container_name: ai-assistant-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    networks:
      - ai-assistant-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

#  ai-assistant:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: ai-assistant-app
#    restart: unless-stopped
#    ports:
#      - "8000:8000"  # FastAPI
#      - "8001:8001"  # MCP Document Server
#      - "8002:8002"  # MCP RAG Server
#      - "8003:8003"  # MCP DocDB Summarization Server
#    environment:
#      # Azure OpenAI Configuration
#      AZURE_OPENAI_API_KEY: ${AZURE_OPENAI_API_KEY}
#      AZURE_OPENAI_ENDPOINT: ${AZURE_OPENAI_ENDPOINT}
#      AZURE_OPENAI_MODEL_NAME: ${AZURE_OPENAI_MODEL_NAME}
#      AZURE_OPENAI_MODEL_API_VERSION: ${AZURE_OPENAI_MODEL_API_VERSION}
#
#      AZURE_OPENAI_EMBEDDING_ENDPOINT: ${AZURE_OPENAI_EMBEDDING_ENDPOINT}
#      AZURE_OPENAI_EMBEDDING_API_KEY: ${AZURE_OPENAI_EMBEDDING_API_KEY}
#      AZURE_OPENAI_EMBEDDING_DEPLOYMENT: ${AZURE_OPENAI_EMBEDDING_DEPLOYMENT}
#      AZURE_OPENAI_EMBEDDING_MODEL_API_VERSION: ${AZURE_OPENAI_EMBEDDING_MODEL_API_VERSION}
#
#      MONGODB_URI: ${MONGODB_URI}
#      MONGODB_DB: ${MONGODB_DB}
#      MONGODB_COLLECTION: ${MONGODB_COLLECTION}
#
#      QDRANT_URL: http://qdrant:6333
#      QDRANT_HOST: qdrant
#      QDRANT_PORT: 6333
#
#      MCP_SERVER_PORT: 8001
#      DOCUMENT_MCP_URL: http://localhost:8001/sse
#      RAG_MCP_URL: http://localhost:8002/sse
#      DOCDB_SUMMARIZATION_MCP_URL: http://localhost:8003/sse
#
#      DEBUG: ${DEBUG:-false}
#      PYTHONPATH: /app
#      PYTHONUNBUFFERED: 1
#    volumes:
#      - ./data:/app/data
#      - ai_assistant_uploads:/app/data/uploads
#      - ./logs:/app/logs
#    depends_on:
#      mongodb:
#        condition: service_healthy
#      qdrant:
#        condition: service_healthy
#    networks:
#      - ai-assistant-network
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#      start_period: 60s

volumes:
  mongodb_data:
    driver: local
  qdrant_data:
    driver: local
  ai_assistant_uploads:
    driver: local

networks:
  ai-assistant-network:
    driver: bridge